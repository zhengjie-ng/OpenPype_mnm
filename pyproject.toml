[tool.poetry]
name = "OpenPype"
version = "3.15.11" # OpenPype
description = "Open VFX and Animation pipeline with support."
authors = ["OpenPype Team <info@openpype.io>"]
license = "MIT License"
homepage = "https://openpype.io"
documentation = "https://openpype.io/docs/artist_getting_started"
repository = "https://github.com/pypeclub/openpype"
readme = "README.md"
keywords = ["Pipeline", "Avalon", "VFX", "animation", "automation", "tracking", "asset management"]
packages = [
    {include = "igniter"},
    {include = "repos"},
    {include = "tools"},
    {include = "tests"},
    {include = "docs"},
    {include = "openpype"},
    {include = "start.py"},
    {include = "LICENSE"},
    {include = "README.md"},
    {include = "setup.py"},
    {include = "pyproject.toml"},
    {include = "poetry.lock"}
]

[tool.poetry.scripts]
openpype = 'start:boot'

[tool.poetry.dependencies]
python = ">=3.9.1,<3.10"
aiohttp = "^3.7"
aiohttp_json_rpc = "*" # TVPaint server
acre = { git = "https://github.com/pypeclub/acre.git" }
opentimelineio = "^0.14"
appdirs = { git = "https://github.com/ActiveState/appdirs.git", branch = "master" }
blessed = "^1.17" # openpype terminal formatting
coolname = "*"
clique = "1.6.*"
Click = "^7"
dnspython = "^2.1.0"
ftrack-python-api = "^2.3.3"
shotgun_api3 = {git = "https://github.com/shotgunsoftware/python-api.git", rev = "v3.3.3"}
gazu = "^0.8.34"
google-api-python-client = "^1.12.8" # sync server google support (should be separate?)
jsonschema = "^2.6.0"
keyring = "^22.0.1"
log4mongo = "^1.7"
pathlib2= "^2.3.5" # deadline submit publish job only (single place, maybe not needed?)
Pillow = "^9.0" # used in TVPaint and for slates
pyblish-base = "^1.8.8"
pynput = "^1.7.2" # idle manager in tray
pymongo = "^3.11.2"
"Qt.py" = "^1.3.3"
QtPy = "^2.3.0"
qtawesome = "0.7.3"
speedcopy = "^2.1"
six = "^1.15"
semver = "^2.13.0" # for version resolution
wsrpc_aiohttp = "^3.1.1" # websocket server
pywin32 = { version = "301", markers = "sys_platform == 'win32'" }
jinxed = [
    { version = "^1.0.1", markers = "sys_platform == 'darwin'" },
    { version = "^1.0.1", markers = "sys_platform == 'linux'" }
]
python3-xlib = { version="*", markers = "sys_platform == 'linux'"}
enlighten = "^1.9.0"
slack-sdk = "^3.6.0"
requests = "^2.25.1"
pysftp = "^0.2.9"
dropbox = "^11.20.0"
aiohttp-middlewares = "^2.0.0"
opencolorio = "^2.2.0"

[tool.poetry.dev-dependencies]
flake8 = "^6.0"
autopep8 = "^2.0"
coverage = "*"
cx_freeze = "6.12.0"
GitPython = "^3.1.17"
jedi = "^0.13"
Jinja2 = "^3"
markupsafe = "2.0.1"
pycodestyle = "^2.5.0"
pydocstyle = "^3.0.0"
pylint = "^2.4.4"
pytest = "^6.1"
pytest-cov = "*"
pytest-print = "*"
Sphinx = "^6.1"
sphinx-rtd-theme = "*"
recommonmark = "*"
wheel = "*"
enlighten = "*"  # cool terminal progress bars
toml = "^0.10.2" # for parsing pyproject.toml
pre-commit = "*"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/pypeclub/openpype/issues"
"Discussions" = "https://github.com/pypeclub/openpype/discussions"

[[tool.poetry.source]]
name = "openpype"
url = "https://distribute.openpype.io/wheels/"
secondary = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[openpype]
# note: in here we can use pip version specifiers as this is installed with pip until
# Poetry will support custom location (-t flag for pip)
# https://pip.pypa.io/en/stable/cli/pip_install/#requirement-specifiers
[openpype.qtbinding.windows]
package = "PySide2"
version = "5.15.2"

[openpype.qtbinding.darwin]
package = "PySide6"
version = "6.4.1"

[openpype.qtbinding.linux]
package = "PySide2"
version = "5.15.2"

# TODO: we will need to handle different linux flavours here and
#       also different macos versions too.
[openpype.thirdparty.ffmpeg.windows]
url = "https://distribute.openpype.io/thirdparty/ffmpeg-4.4-windows.zip"
hash = "dd51ba29d64ee238e7c4c3c7301b19754c3f0ee2e2a729c20a0e2789e72db925"

[openpype.thirdparty.ffmpeg.linux]
url = "https://distribute.openpype.io/thirdparty/ffmpeg-4.4-linux.tgz"
hash = "10b9beda57cfbb69b9ed0ce896c0c8d99227b26ca8b9f611040c4752e365cbe9"

[openpype.thirdparty.ffmpeg.darwin]
url = "https://distribute.openpype.io/thirdparty/ffmpeg-4.4-macos.tgz"
hash = "95f43568338c275f80dc0cab1e1836a2e2270f856f0e7b204440d881dd74fbdb"

[openpype.thirdparty.oiio.windows]
url = "https://distribute.openpype.io/thirdparty/oiio_tools-2.3.10-windows.zip"
hash = "b9950f5d2fa3720b52b8be55bacf5f56d33f9e029d38ee86534995f3d8d253d2"

[openpype.thirdparty.oiio.linux]
url = "https://distribute.openpype.io/thirdparty/oiio_tools-2.2.20-linux-centos7.tgz"
hash = "3894dec7e4e521463891a869586850e8605f5fd604858b674c87323bf33e273d"

[openpype.thirdparty.ocioconfig]
url = "https://distribute.openpype.io/thirdparty/OpenColorIO-Configs-1.0.2.zip"
hash = "4ac17c1f7de83465e6f51dd352d7117e07e765b66d00443257916c828e35b6ce"

[tool.pyright]
include = [
    "igniter",
    "openpype",
    "repos",
    "vendor"
]
exclude = [
    "**/node_modules",
    "**/__pycache__"
]
ignore = ["website", "docs", ".git"]

reportMissingImports = true
reportMissingTypeStubs = false
